#!/bin/bash

usage() {
    echo "A command line wrapper to run commands or shells inside the"
    echo "kubens.service mount namespace."
    echo
    echo "Usage:"
    echo "    $(basename $0) [--verbose|--quiet] [command ...]"
    echo
    echo "Autodetect whether the kubens.service has pinned a mount namespace in a"
    echo "well-known location, and if so, join it by passing it and the"
    echo "user-specified command to nsenter(1). If kubens.service has not set up"
    echo "the mount namespace, the user-specified command is still passed to"
    echo "nsenter(1) but no namespace is entered."
    exit 1
}

LOGLEVEL=${KUBENSENTER_LOG:-1}
_log() {
    local level=$1; shift
    if [[ $level -le $LOGLEVEL ]]; then
        echo "kubensenter: $@" >&2
    fi
}

info() {
    _log 1 "$@"
}

debug() {
    _log 2 "$@"
}

# Returns 0 if the argument given is a mount namespace
ismnt() {
    local nsfs=$(findmnt -o SOURCE -n -t nsfs "$1")
    [[ $nsfs =~ nsfs\[mnt:\[ ]]
}

# Sets KUBENSMNT if it's not already
DEFAULT_KUBENSMNT=${DEFAULT_KUBENSMNT:-"/run/kubens/mnt"}
autodetect() {
    local default=$DEFAULT_KUBENSMNT
    if [[ -n $KUBENSMNT ]]; then
        debug "Autodetect: \$KUBENSMNT already set"
        return 0
    fi
    if [[ ! -e $default ]]; then
        debug "Autodetect: No mount namespace found at $default"
        return 1
    fi
    if ! ismnt "$default"; then
        info "Autodetect: Stale or mismatched namespace at $default"
        return 1
    fi
    KUBENSMNT=$default
    info "Autodetect: kubens.service namespace found at $KUBENSMNT"
    return 0
}

# If KUBENSMNT is set, run nsenter to join that mountspace
kubensenter() {
    local nsarg
    if [[ -n $KUBENSMNT ]]; then
        debug "Joining mount namespace in $KUBENSMNT"
        nsarg=$(printf -- "--mount=%q" "$KUBENSMNT")
    else
        debug "KUBENSMNT not set; running normally"
    fi
    nsenter $nsarg "$@"
}

main() {
    while [[ -n $1 ]]; do
        case "$1" in
            -h | --help)
                usage
                ;;
            -v | --verbose)
                shift
                ((LOGLEVEL++))
                ;;
            -q | --quiet)
                shift
                ((LOGLEVEL--))
                ;;
            *)
                break
                ;;
        esac
    done

    autodetect
    kubensenter "$@"
}

# bash modulino
[[ "$BASH_SOURCE" == "$0" ]] && main "$@"
