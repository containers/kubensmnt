#!/bin/bash

KUBENSENTER=${KUBENSENTER:-$(which kubensenter 2>/dev/null)}
SYSTEMD_BASE=${SYSTEMD_BASE:-"/etc/systemd/system"}
DROPIN_NAME=${DROPIN_NAME:-"99-kubens-wrapper.conf"}

LOGLEVEL=${LOGLEVEL:-0}
debug() {
    if [[ $LOGLEVEL -ge 1 ]]; then
        echo "$*" >&2
    fi
}

EXECSTART_SRC=()
EXECSTART=()

appendExecstart() {
    local execStart=$1
    local currentSrc=$2
    if [[ $execStart ]]; then
        EXECSTART+=("$execStart")
        EXECSTART_SRC+=("$currentSrc")
    fi
}

extractExecStart() {
    local service=$1
    EXECSTART=()
    EXECSTART_SRC=()

    if ! serviceConfig=$(systemctl cat "$service"); then
        return 1
    fi
    local execStart inExecStart currentSrc
    while IFS= read -r line; do
        if [[ $line =~ ^#.*/$service$ || 
              $line =~ ^#.*/$service.d/ ]]; then
            debug "Parsing from ${line#\# }"
            appendExecstart "$execStart" "$currentSrc"
            currentSrc=${line#\# }
            execStart=""
        elif [[ $line == "ExecStart=" ]]; then
            execStart=""
        elif [[ $line =~ ^ExecStart= ]]; then
            debug "Found an ExecStart entry"
            execStart=${line#ExecStart=}
            inExecStart=1
        elif [[ $inExecStart ]]; then
            execStart="$execStart
$line"
        fi
        if [[ $inExecStart && $line =~ \\$ ]]; then
            inExecStart=1
        else
            inExecStart=
        fi
    done <<<"$serviceConfig"
    appendExecstart "$execStart" "$currentSrc"
    debug "Found ${#EXECSTART[*]} ExecStart entries"
    [[ ${#EXECSTART[*]} -gt 0 ]]
}

needsWrapper() {
    local execStart=$1
    [[ ! $execStart =~ $KUBENSENTER ]] 
}

generateDropin() {
    local execStart=$1

    cat <<EOF
# Generated by github.com/containers/kubensmnt
[Unit]
After=kubens.service

[Service]
ExecStart=
ExecStart=$KUBENSENTER \\
    $execStart
EOF
}

dropinPath() {
    local service=$1
    echo "$SYSTEMD_BASE/${service}.d/$DROPIN_NAME"
}

setup() {
    local service=$1
    echo "Wrapping service $service"
    if ! extractExecStart "$service"; then
        return 1
    fi
    local dropin hasWrapper i=$(( ${#EXECSTART[*]} - 1 ))
    while [[ $i -ge 0 ]]; do
        debug "i=$i src=${EXECSTART_SRC[$i]}"
        if needsWrapper "${EXECSTART[$i]}";then
            dropin=$(generateDropin "${EXECSTART[$i]}")
            break
        else
            hasWrapper=${EXECSTART_SRC[$i]}
        fi
        (( i-- ))
    done
    if [[ -z $dropin ]]; then
        echo "Base $service already has kubensenter in it; no drop-in needed."
        return 1
    fi
    local dropinFile
    dropinFile=$(dropinPath "$service")
    if [[ $hasWrapper ]]; then
        echo "Found existing wrapper drop-in $hasWrapper"
    fi
    echo "Writing drop-in to $dropinFile"
    mkdir -p "$(dirname "$dropinFile")"
    cat >"$dropinFile" <<<"$dropin"
}

if [[ $# -eq 0 || $1 == "-h" || $1 == "--help" ]]; then
    echo "Usage:"
    echo "  $(basename "$0") service..."
    echo
    echo "Create a systemd drop-in for the listed services"
    echo "which wraps the previous ExecStart with kubensenter"
    exit 1
fi
if [[ -z $KUBENSENTER || ! -x $KUBENSENTER ]]; then
    echo "The kubensenter script is not in any \$PATH."
    echo "Install it before setting up services to use it."
    exit 1
fi
for service in "$@"; do
    setup "$service"
done
